<?php

namespace OCAS\OCASBundle\Repository;
use \DoctrineExtensions\Query\MySQL\Month;
/**
 * SessionRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class SessionRepository extends \Doctrine\ORM\EntityRepository
{
    /**
    * Compte toutes les sessions de l'annee en cours
    */
    public function nombreSessions()
    {
        $annee = new \DateTime("Y");
        $builder = $this->createQueryBuilder('a');
        $builder->select('COUNT(a.id) AS nombre')
            ->where('a.date_debut LIKE ":annee%"')
            ->orderBy('a.date_debut')
            ->setParameter('annee', $annee);
        return $builder->getQuery()->getSingleScalarResult();
    }

    /**
    * Retourne les sessions dont le libelle est $libelle
    */
    public function findByLibelle($libelle)
    {
      // $date = new \DateTime("today");
      // AND s.dateDebut >= :date
      $query = $this->getEntityManager()->createQuery(
        '
        SELECT s FROM OCASBundle:Session s JOIN OCASBundle:Libelle_Formation l
        WHERE l.libelle = :libelle

        AND s.libelle_formation = l')
        // ->setParameter("date", $date)
        ->setParameter("libelle", $libelle);
      return $query->getResult();
    }

    /**
    * Retourne les stagiaires inscrits Ã  la session
    */
    public function findInscrits($session)
    {
      $query = $this->getEntityManager()
                    ->createQuery(
                        '
          SELECT s FROM OCASBundle:Detail_session p, OCASBundle:Stagiaire s
          WHERE p.session = :session
          AND s = p.stagiaire'
                    );
      $query->setParameter('session', $session);
      return $query->getResult();
      //find stagiaire id where Detail_session.session_id = id
    }

    /**
    * Retourne le libelle de formation a partir de l'id de session
    */
    public function findLibelleBySession($id)
    {
      $query = $this->_em->createQuery(
        '
        SELECT l.libelle FROM OCASBundle:Session s JOIN OCASBundle:Libelle_Formation l
        WHERE s.id=:id
        AND s.libelle_formation = l')
        ->setParameter("id", $id);
      $results = $query->getResult();
      return $results;
    }

    /**
    * Retourne les formations auxquelles a participÃ© un stagiaire
    */
    public function findSessionByStagiaire($stagiaire)
    {
      $query = $this->_em->createQuery(
        '
        SELECT s
        FROM OCASBundle:Session s, OCASBundle:Detail_session d
          WHERE d.stagiaire=:stagiaire
          AND d.session = s')
        ->setParameter("stagiaire", $stagiaire);
      $results = $query->getResult();
      return $results;
    }



}
