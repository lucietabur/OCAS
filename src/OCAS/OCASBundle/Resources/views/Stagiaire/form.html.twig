{% extends "@OCAS/layout.html.twig" %}
{# changer l'heritage de template #}
{% block title %}{{h1}}{% endblock %}
{% block header %}{{h1}}{% endblock %}
{% block content %}

<div class="col-8 offset-2">
  {% form_theme form "bootstrap_4_horizontal_layout.html.twig" %}
  {{ form_start(form)}}
  {{ form_row(form.nom) }}
  {{ form_row(form.fonction) }}
  {{ form_row(form.ville) }}
  {{ form_row(form.naissance) }}
  {{ form_row(form.titre) }}
  {{ form_row(form.nationalite) }}
  {{ form_row(form.quotite) }}
  {{ form_row(form.statut) }}
  {{ form_row(form.agence) }}

  {#}{% form_theme form "bootstrap_4_layout.html.twig" %}#}
  <div class="row">
    {{ form_row(form.detail_formation) }}
    {{ form_rest(form) }}
  <a href="#" id="add_formation" class="btn btn-primary">Ajouter une formation</a>
</div>
  {{ form_row(form.enregistrer )}}
  <a role="button" href="{{ path('stagiaire_list')}}" class="btn btn-primary">Retour à la liste</a>
  {% if id is defined %}
    <a role="submit" href="{{ path('stagiaire_delete',{'id': stagiaire.id })}}" class="btn btn-danger">Supprimer le stagiaire</a>
  {% endif %}
  </div>

<script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
<script type="text/javascript">

$(document).ready(function() {

  // On récupère la balise <div> en question qui contient l'attribut « data-prototype » qui nous intéresse.

  var $container = $('div#ocasbundle_stagiaire_detail_formation');


  // On définit un compteur unique pour nommer les champs qu'on va ajouter dynamiquement

  var index = $container.find(':input').length;


  // On ajoute un nouveau champ à chaque clic sur le lien d'ajout.

  $('#add_formation').click(function(e) {

    addFormation($container);


    e.preventDefault(); // évite qu'un # apparaisse dans l'URL

    return false;

  });


  // On ajoute un premier champ automatiquement s'il n'en existe pas déjà un (cas d'une nouvelle annonce par exemple).

  if (index == 0) {

    addFormation($container);

  } else {

    // S'il existe déjà des catégories, on ajoute un lien de suppression pour chacune d'entre elles

    $container.children('div').each(function() {

      addDeleteLink($(this));

    });

  }


  // La fonction qui ajoute un formulaire DetailType

  function addFormation($container) {

    // Dans le contenu de l'attribut « data-prototype », on remplace :

    // - le texte "__name__label__" qu'il contient par le label du champ

    // - le texte "__name__" qu'il contient par le numéro du champ

    var template = $container.attr('data-prototype')

      .replace(/__name__label__/g, 'Formation n°' + (index+1))

      .replace(/__name__/g,        index)

    ;


    // On crée un objet jquery qui contient ce template

    var $prototype = $(template);


    // On ajoute au prototype un lien pour pouvoir supprimer la catégorie

    addDeleteLink($prototype);


    // On ajoute le prototype modifié à la fin de la balise <div>

    $container.append($prototype);


    // Enfin, on incrémente le compteur pour que le prochain ajout se fasse avec un autre numéro

    index++;

  }


  // La fonction qui ajoute un lien de suppression d'une catégorie

  function addDeleteLink($prototype) {

    // Création du lien

    var $deleteLink = $('<a href="#" class="btn btn-danger">Retirer</a>');


    // Ajout du lien

    $prototype.append($deleteLink);


    // Ajout du listener sur le clic du lien pour effectivement supprimer la catégorie

    $deleteLink.click(function(e) {

      $prototype.remove();


      e.preventDefault(); // évite qu'un # apparaisse dans l'URL

      return false;

    });

  }

});

</script>
{% endblock %}
